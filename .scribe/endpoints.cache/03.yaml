## Autogenerated by Scribe. DO NOT MODIFY.

name: Products
description: |-

  APIs for managing products in the tenant's catalog
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/products/sync
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products in the tenant's catalog
      subgroup: ''
      subgroupDescription: ''
      title: 'Create or Update Product from ERP'
      description: 'Special endpoint for ERP integration that handles both creation and update.'
      authenticated: true
      custom: []
    headers:
      X-API-KEY: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_name:
        name: product_name
        description: 'The name of the product.'
        required: true
        example: 'Test Product'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'optional The description of the product.'
        required: false
        example: 'A test product description'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      base_price:
        name: base_price
        description: 'The base price of the product.'
        required: true
        example: '99.99'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status of the product (active, inactive, discontinued).'
        required: true
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      unit_of_measure:
        name: unit_of_measure
        description: 'The unit of measure (piece, kg, liter, meter).'
        required: true
        example: piece
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sku:
        name: sku
        description: 'optional The SKU of the product (must be unique per tenant).'
        required: false
        example: SKU001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      part_number:
        name: part_number
        description: 'optional The part number of the product.'
        required: false
        example: PART001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      serial_number:
        name: serial_number
        description: 'The serial number of the product.'
        required: true
        example: SN001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      part_condition:
        name: part_condition
        description: 'optional The condition of the product (new, used, discontinued, damaged, refurbished).'
        required: false
        example: new
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      brand:
        name: brand
        description: 'optional The brand of the product.'
        required: false
        example: 'Test Brand'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      family:
        name: family
        description: 'optional The product family.'
        required: false
        example: 'Test Family'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      line:
        name: line
        description: 'optional The product line.'
        required: false
        example: 'Test Line'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      product_name: 'Test Product'
      description: 'A test product description'
      base_price: '99.99'
      status: active
      unit_of_measure: piece
      sku: SKU001
      part_number: PART001
      serial_number: SN001
      part_condition: new
      brand: 'Test Brand'
      family: 'Test Family'
      line: 'Test Line'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              ...
            },
            "message": "Product synchronized successfully"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - X-API-KEY
      - v1DfZPkaVEae3dcb8654h6g
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/products
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products in the tenant's catalog
      subgroup: ''
      subgroupDescription: ''
      title: 'List Products'
      description: 'Returns a filtered list of products belonging to the authenticated tenant.'
      authenticated: true
      custom: []
    headers:
      X-API-KEY: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: 'Search by name, serial, SKU or part number'
        required: false
        example: similique
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Filter by status (active, inactive, discontinued)'
        required: false
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      condition:
        name: condition
        description: 'Filter by condition (new, used, discontinued, damaged, refurbished)'
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      min_price:
        name: min_price
        description: 'numeric Minimum price filter'
        required: false
        example: vero
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_price:
        name: max_price
        description: 'numeric Maximum price filter'
        required: false
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      in_stock:
        name: in_stock
        description: 'Filter products with stock'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Items per page.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: similique
      status: id
      condition: et
      min_price: vero
      max_price: voluptatem
      in_stock: true
      per_page: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [...],
            "meta": {
              "current_page": 1,
              "last_page": 5,
              "per_page": 15,
              "total": 75
            },
            "message": "Products retrieved successfully"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - X-API-KEY
      - vEkg3ha1b6Z4fd5cDaV8e6P
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/products/{product}'
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products in the tenant's catalog
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Product Details'
      description: 'Returns detailed information about a specific product.'
      authenticated: true
      custom: []
    headers:
      X-API-KEY: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product:
        name: product
        description: 'The product.'
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      product: ut
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "product_name": "Test Product",
              "description": "Product description",
              "base_price": "99.99",
              "status": "active",
              "unit_of_measure": "piece",
              "sku": "SKU001",
              "part_number": "PART001",
              "serial_number": "SN001",
              "part_condition": "new",
              "brand": "Test Brand",
              "family": "Test Family",
              "line": "Test Line",
            },
            "message": "Product retrieved successfully"
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Product not found"
          }
        headers: []
        description: 'not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - X-API-KEY
      - dckhDbEa4V5a1fZP368ev6g
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/products
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products in the tenant's catalog
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Product'
      description: 'Creates a new product for the authenticated tenant.'
      authenticated: true
      custom: []
    headers:
      X-API-KEY: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_name:
        name: product_name
        description: 'The name of the product.'
        required: true
        example: 'Test Product'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'optional The description of the product.'
        required: false
        example: 'A test product description'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      base_price:
        name: base_price
        description: 'The base price of the product.'
        required: true
        example: '99.99'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status of the product (active, inactive, discontinued).'
        required: true
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      unit_of_measure:
        name: unit_of_measure
        description: 'The unit of measure (piece, kg, liter, meter).'
        required: true
        example: piece
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sku:
        name: sku
        description: 'optional The SKU of the product (must be unique per tenant).'
        required: false
        example: SKU001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      part_number:
        name: part_number
        description: 'optional The part number of the product.'
        required: false
        example: PART001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      serial_number:
        name: serial_number
        description: 'The serial number of the product.'
        required: true
        example: SN001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      part_condition:
        name: part_condition
        description: 'optional The condition of the product (new, used, discontinued, damaged, refurbished).'
        required: false
        example: new
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      brand:
        name: brand
        description: 'optional The brand of the product.'
        required: false
        example: 'Test Brand'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      family:
        name: family
        description: 'optional The product family.'
        required: false
        example: 'Test Family'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      line:
        name: line
        description: 'optional The product line.'
        required: false
        example: 'Test Line'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      product_name: 'Test Product'
      description: 'A test product description'
      base_price: '99.99'
      status: active
      unit_of_measure: piece
      sku: SKU001
      part_number: PART001
      serial_number: SN001
      part_condition: new
      brand: 'Test Brand'
      family: 'Test Family'
      line: 'Test Line'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "product_name": "Test Product",
              "description": "A test product description",
              "base_price": "99.99",
              "status": "active",
              "unit_of_measure": "piece",
              "sku": "SKU001",
              "created_at": "2024-12-18T00:00:00.000000Z",
              "updated_at": "2024-12-18T00:00:00.000000Z"
            },
            "message": "Product created successfully"
          }
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "The product name field is required."
          }
        headers: []
        description: 'validation error'
        custom: []
    responseFields: []
    auth:
      - headers
      - X-API-KEY
      - g35vbfkPheadaV6ZD6E184c
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/products/{product}'
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products in the tenant's catalog
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Product'
      description: 'Updates an existing product. All fields are optional for updates.'
      authenticated: true
      custom: []
    headers:
      X-API-KEY: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product:
        name: product
        description: 'The product.'
        required: true
        example: cumque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      product: cumque
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_name:
        name: product_name
        description: 'optional The name of the product.'
        required: false
        example: 'Updated Product'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'optional The description of the product.'
        required: false
        example: 'Dignissimos qui dolorum adipisci voluptatem recusandae suscipit.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      base_price:
        name: base_price
        description: 'optional The base price of the product.'
        required: false
        example: '149.99'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'optional The status (active, inactive, discontinued).'
        required: false
        example: inactive
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      unit_of_measure:
        name: unit_of_measure
        description: 'optional The unit of measure (piece, kg, liter, meter).'
        required: false
        example: kg
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sku:
        name: sku
        description: 'optional The SKU (must be unique per tenant).'
        required: false
        example: SKU002
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      part_number:
        name: part_number
        description: 'optional The part number.'
        required: false
        example: PART002
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      serial_number:
        name: serial_number
        description: 'The serial number.'
        required: true
        example: SN002
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      part_condition:
        name: part_condition
        description: 'optional The condition (new, used, discontinued, damaged, refurbished).'
        required: false
        example: used
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      brand:
        name: brand
        description: 'optional The brand.'
        required: false
        example: 'New Brand'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      family:
        name: family
        description: 'optional The product family.'
        required: false
        example: 'New Family'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      line:
        name: line
        description: 'optional The product line.'
        required: false
        example: 'New Line'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      product_name: 'Updated Product'
      description: 'Dignissimos qui dolorum adipisci voluptatem recusandae suscipit.'
      base_price: '149.99'
      status: inactive
      unit_of_measure: kg
      sku: SKU002
      part_number: PART002
      serial_number: SN002
      part_condition: used
      brand: 'New Brand'
      family: 'New Family'
      line: 'New Line'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "product_name": "Updated Product",
              "base_price": "149.99",
              "status": "inactive"
            },
            "message": "Product updated successfully"
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Product not found"
          }
        headers: []
        description: 'not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - X-API-KEY
      - v51PgdahVa64cbDk8Z36feE
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/products/{product}'
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products in the tenant's catalog
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Product'
      description: 'Soft deletes a product. The product can be reactivated later by updating its status to active.'
      authenticated: true
      custom: []
    headers:
      X-API-KEY: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product:
        name: product
        description: 'The product.'
        required: true
        example: maiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      product: maiores
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": null,
            "message": "Product deleted successfully"
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Product not found"
          }
        headers: []
        description: 'not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - X-API-KEY
      - 6dhc3P6veaa1ZVkEf485bDg
    controller: null
    method: null
    route: null
    custom: []
