name: Products
description: |-

  APIs for managing products in the tenant's catalog
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products in the tenant's catalog
      subgroup: ''
      subgroupDescription: ''
      title: 'List Products'
      description: 'Returns a list of all products belonging to the authenticated tenant.'
      authenticated: true
      custom: []
    headers:
      X-API-KEY: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "product_serial": "TEST001",
                "product_name": "Test Product",
                "description": "Product description",
                "base_price": "99.99",
                "status": "active",
                "unit_of_measure": "piece",
                "sku": "SKU001",
                "part_number": "PART001",
                "serial_number": "SN001",
                "part_condition": "new",
                "brand": "Test Brand",
                "family": "Test Family",
                "line": "Test Line",
                "is_active": true
              }
            ],
            "message": "Products retrieved successfully"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - X-API-KEY
      - v4f6Pgab5Z1386acekDdVhE
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products in the tenant's catalog
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Product'
      description: 'Creates a new product for the authenticated tenant.'
      authenticated: true
      custom: []
    headers:
      X-API-KEY: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_name:
        name: product_name
        description: 'The name of the product.'
        required: true
        example: 'Test Product'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'optional The description of the product.'
        required: false
        example: 'A test product description'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      base_price:
        name: base_price
        description: 'The base price of the product.'
        required: true
        example: '99.99'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status of the product (active, inactive, discontinued).'
        required: true
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      unit_of_measure:
        name: unit_of_measure
        description: 'The unit of measure (piece, kg, liter, meter).'
        required: true
        example: piece
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sku:
        name: sku
        description: 'optional The SKU of the product (must be unique per tenant).'
        required: false
        example: SKU001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      part_number:
        name: part_number
        description: 'optional The part number of the product.'
        required: false
        example: PART001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      serial_number:
        name: serial_number
        description: 'optional The serial number of the product.'
        required: false
        example: SN001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      part_condition:
        name: part_condition
        description: 'optional The condition of the product (new, used, discontinued, damaged, refurbished).'
        required: false
        example: new
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      brand:
        name: brand
        description: 'optional The brand of the product.'
        required: false
        example: 'Test Brand'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      family:
        name: family
        description: 'optional The product family.'
        required: false
        example: 'Test Family'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      line:
        name: line
        description: 'optional The product line.'
        required: false
        example: 'Test Line'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      product_name: 'Test Product'
      description: 'A test product description'
      base_price: '99.99'
      status: active
      unit_of_measure: piece
      sku: SKU001
      part_number: PART001
      serial_number: SN001
      part_condition: new
      brand: 'Test Brand'
      family: 'Test Family'
      line: 'Test Line'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "product_name": "Test Product",
              "description": "A test product description",
              "base_price": "99.99",
              "status": "active",
              "unit_of_measure": "piece",
              "sku": "SKU001",
              "created_at": "2024-12-18T00:00:00.000000Z",
              "updated_at": "2024-12-18T00:00:00.000000Z"
            },
            "message": "Product created successfully"
          }
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "The product name field is required."
          }
        headers: []
        description: 'validation error'
        custom: []
    responseFields: []
    auth:
      - headers
      - X-API-KEY
      - h1Eaak4v86P6DdVeZcgfb35
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products in the tenant's catalog
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Product Details'
      description: 'Returns detailed information about a specific product.'
      authenticated: true
      custom: []
    headers:
      X-API-KEY: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "product_serial": "TEST001",
              "product_name": "Test Product",
              "description": "Product description",
              "base_price": "99.99",
              "status": "active",
              "unit_of_measure": "piece",
              "sku": "SKU001",
              "part_number": "PART001",
              "serial_number": "SN001",
              "part_condition": "new",
              "brand": "Test Brand",
              "family": "Test Family",
              "line": "Test Line",
              "is_active": true
            },
            "message": "Product retrieved successfully"
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Product not found"
          }
        headers: []
        description: 'not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - X-API-KEY
      - a3Dfe18aZdhV54Eckb66gPv
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products in the tenant's catalog
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Product'
      description: 'Updates an existing product. All fields are optional for updates.'
      authenticated: true
      custom: []
    headers:
      X-API-KEY: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_name:
        name: product_name
        description: 'optional The name of the product.'
        required: false
        example: 'Updated Product'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'optional The description of the product.'
        required: false
        example: 'Natus id placeat aliquam nulla sed eligendi omnis necessitatibus.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      base_price:
        name: base_price
        description: 'optional The base price of the product.'
        required: false
        example: '149.99'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'optional The status (active, inactive, discontinued).'
        required: false
        example: inactive
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      unit_of_measure:
        name: unit_of_measure
        description: 'optional The unit of measure (piece, kg, liter, meter).'
        required: false
        example: kg
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sku:
        name: sku
        description: 'optional The SKU (must be unique per tenant).'
        required: false
        example: SKU002
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      part_number:
        name: part_number
        description: 'optional The part number.'
        required: false
        example: PART002
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      serial_number:
        name: serial_number
        description: 'optional The serial number.'
        required: false
        example: SN002
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      part_condition:
        name: part_condition
        description: 'optional The condition (new, used, discontinued, damaged, refurbished).'
        required: false
        example: used
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      brand:
        name: brand
        description: 'optional The brand.'
        required: false
        example: 'New Brand'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      family:
        name: family
        description: 'optional The product family.'
        required: false
        example: 'New Family'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      line:
        name: line
        description: 'optional The product line.'
        required: false
        example: 'New Line'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      product_name: 'Updated Product'
      description: 'Natus id placeat aliquam nulla sed eligendi omnis necessitatibus.'
      base_price: '149.99'
      status: inactive
      unit_of_measure: kg
      sku: SKU002
      part_number: PART002
      serial_number: SN002
      part_condition: used
      brand: 'New Brand'
      family: 'New Family'
      line: 'New Line'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "product_name": "Updated Product",
              "base_price": "149.99",
              "status": "inactive"
            },
            "message": "Product updated successfully"
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Product not found"
          }
        headers: []
        description: 'not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - X-API-KEY
      - 6VbkZd8h4f1acae5PvD36gE
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: |-

        APIs for managing products in the tenant's catalog
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Product'
      description: 'Soft deletes a product. The product can be reactivated later by updating its status to active.'
      authenticated: true
      custom: []
    headers:
      X-API-KEY: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": null,
            "message": "Product deleted successfully"
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Product not found"
          }
        headers: []
        description: 'not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - X-API-KEY
      - 64av85a3bhg6fD1dkZEVPec
    controller: null
    method: null
    route: null
    custom: []
