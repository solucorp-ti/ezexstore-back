name: 'Product Photos'
description: |-

  APIs for managing product photos
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/products/{product_id}/photos'
    metadata:
      groupName: 'Product Photos'
      groupDescription: |-

        APIs for managing product photos
      subgroup: ''
      subgroupDescription: ''
      title: 'List Product Photos'
      description: 'Retrieves a paginated list of photos for a specific product.'
      authenticated: true
      custom: []
    headers:
      X-API-KEY: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      product_id: 1
    queryParameters:
      per_page:
        name: per_page
        description: 'The number of photos per page. Default: 15.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "photo_url": "/storage/products/1/photo1.jpg",
                "created_at": "2024-12-18T00:00:00.000000Z"
              }
            ],
            "meta": {
              "current_page": 1,
              "last_page": 3,
              "per_page": 15,
              "total": 45
            },
            "message": "Product photos retrieved successfully"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - X-API-KEY
      - P1D8Egefca6563ahkd4bZVv
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/products/{product_id}/photos'
    metadata:
      groupName: 'Product Photos'
      groupDescription: |-

        APIs for managing product photos
      subgroup: ''
      subgroupDescription: ''
      title: 'Upload Product Photos'
      description: 'Uploads one or more photos for a specific product.'
      authenticated: true
      custom: []
    headers:
      X-API-KEY: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      product_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      photos:
        name: photos
        description: 'An array of photo files to upload.'
        required: true
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      photos: null
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "photo_url": "/storage/products/1/photo1.jpg",
                "created_at": "2024-12-18T00:00:00.000000Z"
              }
            ],
            "message": "Photos uploaded successfully"
          }
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "The photos field is required."
          }
        headers: []
        description: 'validation error'
        custom: []
    responseFields: []
    auth:
      - headers
      - X-API-KEY
      - e4fZ136b6aPhkDEagVc58vd
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/products/{product_id}/photos/{photo}'
    metadata:
      groupName: 'Product Photos'
      groupDescription: |-

        APIs for managing product photos
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Product Photo'
      description: 'Deletes a specific photo for the given product.'
      authenticated: true
      custom: []
    headers:
      X-API-KEY: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      photo:
        name: photo
        description: 'The photo.'
        required: true
        example: excepturi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      photoId:
        name: photoId
        description: 'The ID of the photo to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      product_id: 1
      photo: excepturi
      photoId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Photo deleted successfully"
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Photo not found"
          }
        headers: []
        description: 'photo not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - X-API-KEY
      - kfVh3Pd84b6eg1ZvaE6cDa5
    controller: null
    method: null
    route: null
    custom: []
